name: Build, Flash and Tests STM32 Firmware

on:
  push:
    branches:
      - "**"
    paths:
      - "firmware/projet_integration_ci_cd/**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build-flash:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout the repository and pull the branch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      # Step 2: Set up ARM toolchain (persist PATH for next steps)
      - name: Setup ARM toolchain
        run: echo "/opt/arm-gnu-toolchain-13.3.rel1-aarch64-arm-none-eabi/bin" >> $GITHUB_PATH

      # Step 3: Build STM32 project
      - name: Build STM32 project
        working-directory: firmware/projet_integration_ci_cd/Debug
        run: |
          find . -name "*.mk" -exec sed -i 's/-fcyclomatic-complexity//g' {} +
          make clean
          make all

      # Step 4: Flash the STM32 (if hardware attached)
      - name: Flash STM32
        if: ${{ runner.os == 'Linux' }}
        working-directory: firmware/projet_integration_ci_cd/Debug
        run: |
          openocd -f interface/stlink.cfg -f target/stm32l0.cfg \
                  -c "program test2.elf verify reset exit"

      # Step 5 : Test the UART connection with the STM32
      - name: Python test STM32
        run: |
          python3 -m pytest firmware/projet_integration_ci_cd/test -v
        env:
          PYTHONPATH: firmware

