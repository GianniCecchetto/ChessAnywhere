name: Release - Build Python Executable

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"   # ex: v1.0.0

jobs:
  build-windows-app:
    runs-on: windows-latest   # required for building .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --paths=lib --onefile --add-data "app/app/assets/pieces;app/app/assets/pieces" --add-data "app/app/assets/logo;app/app/assets/logo" --add-binary "lib/uart_fmt/src/build/board_com.dll;lib/uart_fmt/src/build" --hidden-import=importlib_metadata --copy-metadata berserk run.py

      - name: Archive executable
        run: |
          mkdir dist-release
          copy dist\run.exe dist-release\windows-app-${{ github.ref_name }}.exe

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist-release/*.exe

  build-linux-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pyinstaller

      - name: Build Linux executable with PyInstaller
        run: |
          pyinstaller --paths=lib --onefile \
          --add-data "app/app/assets/pieces:app/app/assets/pieces" \
          --add-data "app/app/assets/logo:app/app/assets/logo" \
          --add-binary "lib/uart_fmt/src/build/board_com.dll:lib/uart_fmt/src/build" \
          --hidden-import=importlib_metadata \
          --copy-metadata berserk \
          run.py

      - name: Archive executable
        run: |
          mkdir dist-release
          cp dist/run dist-release/linux-app-${{ github.ref_name }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist-release/linux-app-*

  linux-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: build-linux-app

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-app

      - name: Create Linux GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "linux-app-*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  window-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: build-windows-app

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-app

      - name: Create Windows GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
